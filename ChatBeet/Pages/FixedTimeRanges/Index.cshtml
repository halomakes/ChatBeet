@page
@model ChatBeet.Pages.FixedTimeRanges.IndexModel
@using ChatBeet.Utilities
@using Humanizer

@{
    ViewData["Title"] = "Fixed Time Ranges";
    var count = 0;
    var offset = 200;
    var now = DateTime.Now;
}

<h1>Fixed Time Ranges</h1>

<p>
    <a asp-page="Create" class="btn btn-primary">Create New</a>
</p>
<div class="my-4">
    <div class="list-group">
        @foreach (var range in Model.FixedTimeRange.Reverse())
        {
            var percentage = Progress.ForceRange((now - range.StartDate) * 100 / (range.EndDate - range.StartDate));

            <a asp-page="./Details" asp-route-id="@range.Key" class="list-group-item list-group-item-action position-relative overflow-none">
                <span class="ml-2 d-flex align-items-center flex-wrap">
                    <span>@range.Key</span>
                    <span class="flex-grow-1"></span>
                    @if (percentage == 100 && !string.IsNullOrWhiteSpace(range.AfterRangeMessage))
                    {
                        <span>@range.AfterRangeMessage</span>
                    }
                    else if (percentage == 0 && !string.IsNullOrWhiteSpace(range.BeforeRangeMessage))
                    {
                        <span>@range.BeforeRangeMessage</span>
                    }
                    else
                    {
                        <span>
                            @{
                                var elapsed = Progress.ForcePositive(now - range.StartDate);
                                var remaining = Progress.ForcePositive(range.EndDate - now);
                                var formatted = range.Template
                                    .Replace(@"{percentage}", $"{percentage / 100:P}")
                                    .Replace(@"{remaining}", remaining.Humanize())
                                    .Replace(@"{elapsed}", elapsed.Humanize());
                            }
                            @formatted
                        </span>
                    }
                </span>
                <background-bar class="bg-primary" value="Convert.ToInt32(percentage)" animation-delay="count * offset" collection-max="100"></background-bar>
            </a>
            count++;
        }
    </div>
</div>